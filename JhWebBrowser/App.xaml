 <Application x:Class="JhWebBrowser.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MyApplication.xaml"
             xmlns:local="clr-namespace:JhWebBrowser">
    <Application.Resources>
        <!-- MainWindow关闭按钮模版 -->
        <ControlTemplate x:Key="CloseButton" TargetType="Button">
            <Border Name="Border" Background="#3C3C3C">
                <!-- 绘制关闭按钮图形 -->
                <Canvas RenderOptions.EdgeMode="Aliased">
                    <Line Stroke="White" X1="15" Y1="10" X2="25" Y2="20"></Line>
                    <Line Stroke="White" X1="15" Y1="20" X2="25" Y2="10"></Line>
                </Canvas>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#E04343"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--MainWindow最大化按钮模板-->
        <ControlTemplate x:Key="ＭaxButtonTemplate" TargetType="Button">
            <Border Name="Border" Background="#3C3C3C">
                <Canvas RenderOptions.EdgeMode="Aliased">
                    <Rectangle Stroke="White" Width="10" Height="10" Margin="15,12,0,0"/>
                </Canvas>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#3665B3"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#3D6099"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--MainWindow最小化按钮模板-->
        <ControlTemplate x:Key="ＭinButtonTemplate" TargetType="Button">
            <Border Name="Border" Background="#3C3C3C">
                <Canvas RenderOptions.EdgeMode="Aliased">
                    <Line Stroke="White" X1="15" Y1="17" X2="25" Y2="17"/>
                </Canvas>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#3665B3"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#3D6099"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--MainWindow还原按钮模板-->
        <ControlTemplate x:Key="ＭidButtonTemplate" TargetType="Button">
            <Border Name="Border" Background="#3C3C3C">
                <Canvas RenderOptions.EdgeMode="Aliased">
                    <Rectangle Stroke="White" Width="10" Height="10" Margin="13,12,0,0"/>
                    <Line Stroke="White" X1="17" Y1="11" X2="25" Y2="11"/>
                    <Line Stroke="White" X1="25" Y1="11" X2="25" Y2="18"/>
                </Canvas>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#3665B3"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#3D6099"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--MainWindow换肤按钮模板-->
        <ControlTemplate x:Key="SkinButtonTemplate" TargetType="Button">
            <Border Name="Border" Background="#3C3C3C">
                <Canvas RenderOptions.EdgeMode="Aliased">
                    <Path Data="M1000
                          206.016l-160-128c-11.36-9.088-25.504-14.016-40-14.016h-576c-14.528 0-28.64
                          4.928-40 14.016l-160 128c-20.928 16.768-29.184 44.8-20.704 70.24l64 192c6.304 
                          18.912 21.088 33.824 39.968 40.288 6.72 2.304 13.76 3.456 20.736 3.456 11.136
                          0 22.176-2.912 32-8.576v392.576c0 35.328 28.672 64 64 64h576c35.328 0 64-28.672 
                          64-64v-392.576c9.824 5.664 20.864 8.576 32 8.576 7.008 0 14.016-1.152 20.736-3.456
                          18.88-6.464 33.632-21.376 39.936-40.288l64-192c8.512-25.44 
                          0.256-53.472-20.672-70.24zM632.128 128c-17.696 37.152-64.576 
                          64-120.128 64s-102.464-26.848-120.128-64h240.256zM896 
                          448l-96-64v512h-576v-512l-96 64-64-192 160-128h133.664c17.824 55.104 
                          79.872 96 154.336 96 74.432 0 136.512-40.896 154.304-96h133.696l160
                          128-64 192z"
                      Height="12" Stretch="Fill" Canvas.Top="10" Canvas.Left="14" Width="12" Fill="White"/>
                </Canvas>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#3665B3"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#3D6099"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--用户照片-->
        <Style x:Key="btUserImg" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" Height="42" Width="42"  BorderBrush="White" BorderThickness="1">
                            <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="UIElement.Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" BlurRadius="16" Opacity="1" Color="White"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--菜单按钮-->
        <Style x:Key="btnMenu" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Timeline1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Timeline2">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border x:Name="glow" Height="54" Width="72" Background="Transparent"/>
                            <Rectangle x:Name="rg1" Opacity="0" HorizontalAlignment="Stretch" Height="54" Width="72"  VerticalAlignment="Bottom" Fill="Gray" />
                            <Border x:Name="border" HorizontalAlignment="Right" Visibility="Collapsed">
                                <Path Data="M0 192l512 320-512 320v-640z" Height="14" Stretch="Fill" Canvas.Top="338.976" Width="8" Canvas.Left="400" RenderTransformOrigin="0.5,0.5" Fill="White">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="180.063"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" Value="selected">
                                <Setter Property="Visibility" TargetName="border" Value="Visible" />
                                <Setter Property="Fill" TargetName="rg1" Value="black"/>
                                <Setter Property="Opacity" TargetName="rg1" Value="0.6"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                                </Trigger.ExitActions>
                                <Setter Property="Opacity" TargetName="rg1" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--地址栏的后退前进按钮-->
        <Style x:Key="btnFrontBack" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Height="27" Width="27" Background="Transparent" BorderBrush="#7E7E7E" BorderThickness="0"
                                CornerRadius="2">
                            <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#CDCDCD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--清除按钮-->
        <Style x:Key="btnDelete" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="Transparent" Width="12" Height="12">
                            <Canvas VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path x:Name="PathValue" Data="M810 274l-238 238 238 238-60 60-238-238-238 238-60-60 
                                      238-238-238-238 60-60 238 238 238-238z"
                      Height="10" Stretch="Fill" Canvas.Top="-5" Canvas.Left="-6" Width="10" Fill="#636363"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="PathValue" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="PathValue" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--回车按钮-->
        <Style x:Key="btnEnter" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="Transparent" Width="20" Height="26">
                            <Canvas VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path x:Name="PathValue" Data="M995.828 995.826c-37.566
                                      37.564-98.45 37.564-136.016 0l-169.726-169.726c-69.776 44.764-152.26 71.434-241.318
                                      71.434-247.83 0-448.768-200.908-448.768-448.768s200.938-448.766 448.768-448.766c247.862 0 
                                      448.768 200.904 448.768 448.766 0 89.028-26.704 171.542-71.436 
                                      241.352l169.728 169.726c37.562 37.564 37.562 98.418 0 135.982zM448.768
                                      128.218c-177.022 0-320.548 143.494-320.548 320.546s143.526 320.548 320.548 320.548c177.052 0 
                                      320.548-143.496 320.548-320.548s-143.496-320.546-320.548-320.546z"
                      Height="16" Stretch="Fill" Canvas.Top="-7" Canvas.Left="-7" Width="16" Fill="#636363"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="PathValue" Value="#7E7E7E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="PathValue" Value="#CDCDCD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--以下都是TabControl的样式-->
        <Style TargetType="Grid" x:Key="headerGridStyle">
            <Setter Property="Width" Value="160"/>
            <Setter Property="Height" Value="23"/>
        </Style>
        <Style TargetType="Label" x:Key="headerLabelStyle">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Button" x:Key="headerButtonStyle">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Width" Value="14"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" CornerRadius="15" Background="Transparent" BorderBrush="Red" BorderThickness="0">
                            <Path x:Name="ButtonPath" Height="8" Width="8" HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" Data="M0,0 L1,1 M0,1 L1,0"  Stretch="Uniform" Stroke="Red"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Bd" Property="BorderThickness"  Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Bd" Property="Background"  Value="Red"/>
                                <Setter TargetName="ButtonPath" Property="Stroke"  Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabWeb" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid Name="Panel">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="LightSkyBlue" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Panel" Property="Background" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 窗口模版 -->
        <ControlTemplate x:Key="MainWindowTemplate" TargetType="Window">
            <Border>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <!-- 标题栏 -->
                    <Grid Grid.Row="0" Background="#3C3C3C">
                        <Image Source="/Images/TitleImage/device-tv.png" Height="20" Margin="10,0,0,0"
                                HorizontalAlignment="Left"/>
                         <TextBlock x:Name="TitleBar" FontSize="13" Text="{TemplateBinding Title}" Foreground="White"
                                   Padding="32,6,0,0"/>
                        <!--<Button x:Name="btnSkin" Template="{StaticResource SkinButtonTemplate}"
                                HorizontalAlignment="Right" Width="40" Height="30"
                                Margin="0,0,120,0" ToolTip="换  肤"/>-->
                        <!--关闭按钮-->
                        <Button x:Name="btnClose" Template="{StaticResource CloseButton}" 
                                HorizontalAlignment="Right" Width="40" Height="30" ToolTip="关  闭"/>
                        <!--最大化按钮-->
                        <Button x:Name="btnMax" Template="{StaticResource ＭaxButtonTemplate}" 
                                HorizontalAlignment="Right" Width="40" Height="30"
                                Margin="0,0,40,0" ToolTip="最大化"/>
                        <!--还原按钮-->
                        <Button x:Name="btnMid" Template="{StaticResource ＭidButtonTemplate}" 
                                HorizontalAlignment="Right" Width="40" Height="30"
                                Margin="0,0,40,0"  Visibility="Hidden" ToolTip="还  原"/>
                        <!--最小化按钮-->
                        <Button x:Name="btnMin" Template="{StaticResource ＭinButtonTemplate}" 
                                HorizontalAlignment="Right" Width="40" Height="30"
                                Margin="0,0,80,0" ToolTip="最小化"/>
                    </Grid>
                    
                    <!-- 客户区 -->
                    <Border BorderThickness="1,0,1,1" BorderBrush="#3C3C3C" Grid.Row="1" Background="White">
                        <!--<Border.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="10" Opacity="0.8" Color="#80000000"/>
                        </Border.Effect>-->
                        <AdornerDecorator>
                            <ContentPresenter>
                            </ContentPresenter>
                        </AdornerDecorator>
                    </Border>
                </Grid>
            </Border>
        </ControlTemplate>
        <!--ToolTip-->
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Name="Border" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                BorderBrush="#3C3C3C" Background="White">
                            <ContentPresenter Margin="4"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="CornerRadius" Value="0" />
                                <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--webbrowser-->
        <Style TargetType="{x:Type local:TransparentWebBrowser}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:TransparentWebBrowser}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--主窗体1s在淡淡出现-->
        <Style x:Key="windowOpacity" TargetType="{x:Type Window}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Window.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:001" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!--窗体阴影-->
        <Style x:Key="for_noresize_window" TargetType="{x:Type Window}">
            <Setter Property="AllowsTransparency" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Consolas, Microsoft YaHei"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ResizeMode" Value="NoResize"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid Margin="10">
                            <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                <Rectangle.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                                </Rectangle.Effect>
                            </Rectangle>
                            <Border Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Margin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Window.Loaded">
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Duration="0:0:.8"
                                                         Storyboard.TargetProperty="Top" From="0" To="260"  AccelerationRatio=".1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseBtn" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" Background="White">
                            <!-- 绘制关闭按钮图形 -->
                            <Canvas RenderOptions.EdgeMode="Aliased">
                                <Line x:Name="line1" Stroke="Black" X1="15" Y1="10" X2="25" Y2="20"></Line>
                                <Line x:Name="line2" Stroke="Black" X1="15" Y1="20" X2="25" Y2="10"></Line>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#E04343"/>
                                <Setter TargetName="line1" Property="Stroke" Value="White"/>
                                <Setter TargetName="line2" Property="Stroke" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--CheckBox样式-->
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="26" />
            <Setter Property="Width" Value="26"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisualStyte}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Grid Height="{TemplateBinding Height}" Width="{Binding RelativeSource={RelativeSource Self}, Path=Height, UpdateSourceTrigger=PropertyChanged}"
                              MinHeight="26" MinWidth="26" ShowGridLines="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="2.5*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="4*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="4.5*" />
                                    </Grid.RowDefinitions>

                                    <Border Name="MainBorder"
                                    Grid.ColumnSpan="9" Grid.RowSpan="9"
                                    CornerRadius="4"
                                    BorderThickness="1"
                                    Background="Transparent" />

                                    <Border Name="InnerBorder"
                                    Grid.Column="1" Grid.ColumnSpan="5"
                                    Grid.Row="2" Grid.RowSpan="5"
                                    BorderThickness="1"
                                    BorderBrush="#808080" />

                                    <Path Name="InnerPath"
                                  Grid.Column="1" Grid.ColumnSpan="5"
                                  Grid.Row="2" Grid.RowSpan="5"
                                  Data="M31,5 L19.5,5 19.5,19.5 34.5,19.5 34.5,11.75"
                                  Stretch="Fill" Stroke="#808080"/>

                                    <Path Name="CheckMark"
                                  Grid.Column="2" Grid.ColumnSpan="5"
                                  Grid.Row="1" Grid.RowSpan="5"
                                  Opacity="0"
                                  Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z"
                                  Fill="#3babe3"
                                  Stretch="Fill"
                                  Stroke="#3babe3" />

                                    <Path Name="InderminateMark"
                                  Grid.Column="3"
                                  Grid.Row="4"
                                  Data="M0,4 L1,5 5,1 4,0"
                                  Opacity="0"
                                  Stretch="Fill"
                                  StrokeThickness="0"
                                  Fill="#808080" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="InderminateMark" Duration="0:0:0.2" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,4,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        RecognizesAccessKey="True" />
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#81d2eb" />
                                <Setter TargetName="InnerPath" Property="Stroke" Value="#81d2eb" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="CheckMark" Property="Fill" Value="#cccccc" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="#cccccc" />
                                <Setter TargetName="InnerPath" Property="Stroke" Value="#cccccc" />
                                <Setter TargetName="InderminateMark" Property="Fill" Value="#cccccc" />
                                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#cccccc" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#81d2eb" />
                                <Setter TargetName="InnerPath" Property="Stroke" Value="#81d2eb" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Win10Menu-->
        <Style x:Key="windowBaseStyle" TargetType="{x:Type Window}">
            <!--<Setter Property="AllowsTransparency" Value="true"/>-->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Consolas, Microsoft YaHei"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ResizeMode" Value="CanMinimize"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid Margin="10">
                            <!--<Border CornerRadius="4" BorderBrush="Transparent" BorderThickness="2">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="10" Opacity="0.8" Color="#80000000"/>
                                </Border.Effect>
                            </Border>-->
                            <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                <Rectangle.Effect>
                                    <DropShadowEffect BlurRadius="16" ShadowDepth="0"/>
                                </Rectangle.Effect>
                            </Rectangle>
                                <Border Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Margin}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter/>
                                </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="windowMaxBaseStyle" TargetType="{x:Type Window}">
            <!--<Setter Property="AllowsTransparency" Value="true"/>-->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Consolas, Microsoft YaHei"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ResizeMode" Value="CanMinimize"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid>
                            <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                <Rectangle.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                                </Rectangle.Effect>
                            </Rectangle>
                            <Border Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Margin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Win10Menu关闭按钮模版 -->
        <ControlTemplate x:Key="CloseWin10Button" TargetType="Button">
            <Border Name="Border" Background="Transparent">
                <!-- 绘制关闭按钮图形 -->
                <Canvas RenderOptions.EdgeMode="Aliased">
                    <Line  Stroke="White" X1="15" Y1="10" X2="25" Y2="20"></Line>
                    <Line  Stroke="White" X1="15" Y1="20" X2="25" Y2="10"></Line>
                </Canvas>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#E04343"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--Win10Menu最大化按钮模板-->
        <ControlTemplate x:Key="ＭaxWin10ButtonTemplate" TargetType="Button">
            <Border Name="Border" Background="Transparent">
                <Canvas RenderOptions.EdgeMode="Aliased">
                    <Rectangle Stroke="White" Width="10" Height="10" Margin="15,12,0,0"/>
                </Canvas>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#0D98F7"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--Win10Menu最小化按钮模板-->
        <ControlTemplate x:Key="ＭinWin10ButtonTemplate" TargetType="Button">
            <Border Name="Border" Background="Transparent">
                <Canvas RenderOptions.EdgeMode="Aliased">
                    <Line Stroke="White" X1="15" Y1="17" X2="25" Y2="17"/>
                </Canvas>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#0D98F7"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--Win10Menu还原按钮模板-->
        <ControlTemplate x:Key="ＭidWin10ButtonTemplate" TargetType="Button">
            <Border Name="Border" Background="Transparent">
                <Canvas RenderOptions.EdgeMode="Aliased">
                    <Rectangle Stroke="White" Width="10" Height="10" Margin="13,12,0,0"/>
                    <Line Stroke="White" X1="17" Y1="11" X2="25" Y2="11"/>
                    <Line Stroke="White" X1="25" Y1="11" X2="25" Y2="18"/>
                </Canvas>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#0D98F7"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--更换皮肤的Menu-->
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border CornerRadius="0">
                            <ItemsPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--更换皮肤的MenuItem父节点-->
        <Style x:Key="menuItemSkin" TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="bd" Height="30"  Background="Transparent" Width="40" CornerRadius="0">
                            <Grid>
                                <Image Source="/Images/TitleImage/btnskin.png" Height="16" Width="16"/>
                                <ContentPresenter Margin="0,10" ContentSource="Header"  HorizontalAlignment="Left"/>
                                <Popup x:Name="pop"  IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       AllowsTransparency="True" Placement="Bottom" HorizontalOffset="-160">
                                    <Border>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="0" BlurRadius="10" Opacity="0.8" Color="#80000000"/>
                                        </Border.Effect>
                                        <Grid Margin="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="7"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Path  Fill="White" Grid.Column="1" Grid.Row="0" 
                                                   Data="M585.143 694.857q0
                                                   14.857-10.857 25.714t-25.714 
                                                   10.857h-512q-14.857 
                                                   0-25.714-10.857t-10.857-25.714 
                                                   10.857-25.714l256-256q10.857-10.857 
                                                   25.714-10.857t25.714 10.857l256 256q10.857
                                                   10.857 10.857 25.714z" 
                                                   Stretch="Fill" RenderTransformOrigin="0.5,0.5"
                                                   Canvas.Left="0" Height="7" Canvas.Top="0" Width="14"
                                                   HorizontalAlignment="Center" Margin="0,0,58,0"/>
                                            <Border Grid.ColumnSpan="2" Grid.Row="1" CornerRadius="2"  Background="White">
                                                <WrapPanel x:Name="spContent" IsItemsHost="True" Orientation="Horizontal" VerticalAlignment="Top"  Margin="10,0,0,0">
                                                </WrapPanel>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#0D98F7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#0D98F7"/>
                                <Setter TargetName="pop" Property="IsOpen" Value="True"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--更换皮肤的MenuItem子节点-->
        <Style x:Key="menuItemTwo" TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Width="290" Height="216" CornerRadius="2" Background="White">
                            <ContentPresenter Margin="0,10" ContentSource="Header"  HorizontalAlignment="Left"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--更换外观button-->
        <Style x:Key="btnSkin" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bd" Height="30"  Background="Transparent" Width="40">
                            <Image Source="/Images/TitleImage/btnskin.png" Height="16" Width="16"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#0D98F7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BtnPic" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" Width="94" Height="94">
                            <Border x:Name="border1" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" Width="90" Height="90">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      Width="Auto" Grid.RowSpan="2"/>
                                    <Image x:Name="img" Source="/Images/TitleImage/ChooseBack.png" Height="32" Width="32"
                                           VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                            </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" Value="selected">
                                <Setter Property="Visibility" TargetName="img" Value="Visible" />
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#0D98F7"/>
                                <Setter Property="BorderBrush" TargetName="border1" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Win10TableItem-->
        <Style x:Key="chevronTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <StackPanel Orientation="Horizontal" Margin="0,0,-7,0" Height="30">
                            <Path Data="M0,0 10,0 10,30 0,30 10,15" Fill="{TemplateBinding Background}"/>
                            <Grid >
                                <Rectangle Fill="{TemplateBinding Background}" />
                                <TextBlock Name="HeaderArrow" Text="{TemplateBinding Header}" Margin="15,5" VerticalAlignment="Center" Foreground="White" />
                            </Grid>
                            <Path Data="M0,0 10,15 0,30" Fill="{TemplateBinding Background}" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="HeaderArrow" Property="FontWeight" Value="Bold" />
                                <Setter TargetName="HeaderArrow" Property="Foreground" Value="Yellow" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="HeaderArrow" Property="Foreground" Value="DarkGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Win10WebbrowserField收藏推荐的网站-->
        <Style x:Key="chevronButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border1">
                            <StackPanel Orientation="Horizontal"  Height="30">
                                <Path Data="M0,0 10,0 10,30 0,30 10,15" Fill="{TemplateBinding Background}"/>
                                <Grid >
                                    <Rectangle Fill="{TemplateBinding Background}" Width="70"/>
                                    <ContentPresenter Name="HeaderArrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      Width="Auto" Grid.RowSpan="2"/>
                                </Grid>
                                <Path Data="M0,0 10,15 0,30" Fill="{TemplateBinding Background}" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="Foreground" Value="Yellow" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HeaderArrow" Property="Margin" Value="1,1,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--点击菜单-->
        <Style x:Key="btnMenuBack" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Height="27" Width="27" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
                                CornerRadius="2">
                            <Grid>
                                <Path x:Name="path1" Data="M409.6 204.8h-153.6c-28.314 0-51.2 22.886-51.2 51.2v153.6c0 28.262 22.886 51.2 51.2 51.2h153.6c28.314 0 51.2-22.938 51.2-51.2v-153.6c0-28.262-22.886-51.2-51.2-51.2zM768 204.8h-153.6c-28.314 0-51.2 22.886-51.2 51.2v153.6c0 28.262 22.886 51.2 51.2 51.2h153.6c28.314 0 51.2-22.938 51.2-51.2v-153.6c0-28.262-22.886-51.2-51.2-51.2zM409.6 563.2h-153.6c-28.314 0-51.2 22.886-51.2 51.2v153.6c0 28.262 22.886 51.2 51.2 51.2h153.6c28.314 0 51.2-22.938 51.2-51.2v-153.6c0-28.262-22.886-51.2-51.2-51.2zM768 563.2h-153.6c-28.314 0-51.2 22.886-51.2 51.2v153.6c0 28.262 22.886 51.2 51.2 51.2h153.6c28.314 0 51.2-22.938 51.2-51.2v-153.6c0-28.262-22.886-51.2-51.2-51.2z"
                      Height="15" Stretch="Fill" Canvas.Top="-5" Canvas.Left="-6" Width="15" Fill="#7E7E7E"/>
                                <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#7E7E7E" />
                                <Setter TargetName="path1" Property="Fill" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="path1" Property="Margin" Value="1,1,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--滚轴拖动-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="ScrollBarRectangle" CornerRadius="0"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                    Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" Margin="0,10"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="ScrollBarRectangle" Property="Width" Value="Auto" />
                                <Setter TargetName="ScrollBarRectangle" Property="Height" Value="7" />
                                <Setter TargetName="ScrollBarRectangle" Property="Background" Value="#D4D4D4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--滚轴样式-->
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Margin" Value="-5,0,0,0" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#FF8C8C8C" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="ScrollBarThumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}" Opacity="0.7"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="ScrollBarThumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="ScrollBarThumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--提示框-->
        <Style x:Key="btnMessage" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border>
                                <Grid>
                                <Border x:Name="border1" Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"/>
                                    <ContentPresenter Name="HeaderArrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      Width="Auto" Grid.RowSpan="2"/>
                                </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border1" Property="BorderBrush" Value="#2D2D2D"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HeaderArrow" Property="Margin" Value="1,1,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--任务栏上一首-->
        <DrawingImage x:Key="Button1Image">
            <DrawingImage.Drawing>
                <GeometryDrawing Geometry="M1024 1024l-768-512 768-512zM0 128h256v768h-256z"  Brush="White">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" Thickness="0.3"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <!--<DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="Transparent">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0 0 24 24"
                                               RadiusX="4"
                                               RadiusY="4" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>
                </DrawingGroup>-->
            </DrawingImage.Drawing>
        </DrawingImage>
        <!--任务栏播放(M0 0l768 512-768 512z)或暂停-->
        <DrawingImage x:Key="Button2Image">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Geometry="M0 0h256v1024h-256zM512 0h256v1024h-256z" Brush="White">
                        <GeometryDrawing.Pen>
                            <Pen Brush="White" Thickness="0.3"/>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <!--<DrawingGroup.Children>
                        <GeometryDrawing Brush="Transparent">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0 0 24 24"
                                               RadiusX="4"
                                               RadiusY="4" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>-->
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <!--任务栏下一首-->
        <DrawingImage x:Key="Button3Image">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Geometry="M0 0l768 512-768 512zM768 128h256v768h-256z" Brush="White">
                        <GeometryDrawing.Pen>
                            <Pen Brush="White" Thickness="0.3"/>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <!--<DrawingGroup.Children>
                        <GeometryDrawing Brush="Transparent">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0 0 24 24"
                                               RadiusX="4"
                                               RadiusY="4" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup.Children>-->
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <!--托盘右键的ContextMenu-->
        <Style x:Key="MyContextMenuStyle" TargetType="{x:Type ContextMenu}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" CornerRadius="4" Background="White" BorderThickness="4" Width="212">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="1" BlurRadius="6" Direction="270" Opacity="0.75" Color="#FF211613"/>
                            </Border.Effect>
                            <ItemsPresenter Margin="0.1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--托盘右键的MenuItem-->
        <Style x:Key="MyMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontFamily" Value="宋体"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="MyAnimatedBrushBackground" Margin="2"  CornerRadius="1" Background="Transparent" Height="28">
                            <StackPanel Orientation="Horizontal">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="35"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter ContentSource="Icon" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="0,4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="MyAnimatedBrushBackground" Value="#B8DFF9"/>
                                <!--<Setter Property="Foreground" Value="White"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--托盘右键的Menu里面的分割线-->
        <Style x:Key="MySeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Height="1" 
                        SnapsToDevicePixels="true"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--托盘右键的MenuItem二级-->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"  CornerRadius="1" Margin="2" Height="28">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="35" SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"  VerticalAlignment="Center" ContentSource="Icon"/>
                    <ContentPresenter x:Name="HeaderHost" Margin="0,4" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" TextOptions.TextFormattingMode="Display" />
                    <Path x:Name="RightArrow" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="#669EC8" />
                    <Popup x:Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" CornerRadius="4" Background="White" Margin="5" Width="186">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="1" BlurRadius="6" Direction="270" Opacity="0.75" Color="#FF211613"/>
                            </Border.Effect>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Background" TargetName="Border" Value="#B8DFF9"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="White"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="false">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="3" />
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Pink"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--窗体最小化样式-->
        <Style x:Key="windowMidStyle" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Consolas, Microsoft YaHei"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ResizeMode" Value="CanMinimize"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border Margin="10">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="270"  BlurRadius="10"  ShadowDepth="3" />
                            </Border.Effect>
                            <ContentPresenter/>
                            </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--窗体最大化样式-->
        <Style x:Key="windowMaxStyle" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Consolas, Microsoft YaHei"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ResizeMode" Value="CanMinimize"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="270"  BlurRadius="10"  ShadowDepth="3" />
                            </Border.Effect>
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ChoiceBtn" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border  x:Name="border1" Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <ContentPresenter Name="HeaderArrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      Width="Auto" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border1" Property="BorderBrush" Value="White"/>
                                <Setter TargetName="border1" Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HeaderArrow" Property="Margin" Value="1,1,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
